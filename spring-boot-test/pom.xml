<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ctl</groupId>
	<artifactId>spring-boot-test</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-test</name>
	<packaging>war</packaging>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!--kafka依赖-->
		<!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>2.2.5.RELEASE</version>
		</dependency>

		<!--logback-kafka-appender依赖-->
		<!-- https://mvnrepository.com/artifact/com.github.danielwegener/logback-kafka-appender -->
		<dependency>
			<groupId>com.github.danielwegener</groupId>
			<artifactId>logback-kafka-appender</artifactId>
			<version>0.2.0-RC2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder -->
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>5.3</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<!--
				Maven 配置 Tomcat8+ 部署方案
				在maven中配置该下载仓库
				<mirror>
					<id>tomcat8</id>
					<mirrorOf>central</mirrorOf>
					<name>tomcat8</name>
					<url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
				</mirror>
                在activeProfiles配置该仓库
                <activeProfiles>
                    <activeProfile>tomcat8</activeProfile>
                </activeProfiles>
				-->
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat8-maven-plugin</artifactId>
				<version>3.0-r1756463</version>
				<configuration>
					<port>8080</port>
					<uriEncoding>UTF-8</uriEncoding>
					<url>http://192.168.3.117:8080/manager/text</url>
					<!--
						webapps/manager/META-INF中修改运行放的的ip例如192.168.\d+.\d+
						<Context antiResourceLocking="false" privileged="true" >
							  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
									 allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|192.168.\d+.\d+" />
							  <Manager sessionAttributeValueClassNameFilter="java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap"/>
						</Context>
						tomcat-users.xml配置密码
						<role rolename="manager"/>
						<role rolename="manager-gui"/>
						<role rolename="admin"/>
						<role rolename="admin-gui"/>
						<role rolename="manager-script"/>
						<user username="root" password="123456" roles="admin-gui,admin,manager-gui,manager,manager-script"/>
					-->
					<username>root</username>
					<password>123456</password>
					<path>/${project.artifactId}</path>

					<!--
					  如果在setting.xml配置了（和tomcat-user.xml配置的密码保持一致）
					  	<server>
							<id>tomcat8</id>
							<username>root</username>
							<password>123456</password>
						</server>
						那么
						<configuration>
							<url>http://192.168.3.117:8071/manager/text</url>
							<port>8071</port>
							<uriEncoding>UTF-8</uriEncoding>
							<username>root</username>
							<password>123456</password>
							<path>/${project.artifactId}</path>
						</configuration>
						等用于
						<configuration>
							<url>http://192.168.3.117:8071/manager/text</url>
						 	<server>tomcat8</server>
							<path>/${project.artifactId}</path>
						</configuration>
						在Plugins中可以看到tomcat8插件该插件有deploy,redeploy 等命令执行后就可以直接部署到服务tomcat服务器上
					-->
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
